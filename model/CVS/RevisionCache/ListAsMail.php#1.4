<?php

class ListAsMail extends DbObjects implements Evaluable{
    private $status = false;    
    
    public function create($checklistId,$to){
        $subject = "Deine Social Privacy Checklist";
        $contentHtml = '<html><style>';
        $contentHtml .= '.checklistPoint{margin-top: 10px; margin-bottom: 10px; border:1px solid black;} ';
        $contentHtml .= '.heading{background-color: lightgray; border-bottom: 1px solid black;margin: 0px; padding: 4px;} ';
        $contentHtml .= '.content{padding-left: 4px;}';
        $contentHtml .= '</style><body>';
        $contentPlain = "";
        
        $checklistPointsSql = "SELECT `checklistPointId` AS `id` FROM `checklist_checklistpoints` WHERE `checklistId` = ".$checklistId." ORDER BY `position`";
        $checklistPoints = $this->select($checklistPointsSql);
        $i = 1;
        while($checklistPoint = $checklistPoints->fetch_object()){
            $content = $this->getChecklistPointContent($checklistPoint->id);
            
            $contentHtml .= '<div class="checklistPoint">';
                $contentHtml .= '<div class="heading">'.$content->heading.'</div>';
                $contentHtml .= '<div class="content">'.$content->text.'</div>';
            $contentHtml .= '</div>';
            
            $contentPlain .= $i.". ".strip_tags($content->heading,'<a>')."\n\r\n\r";
            $contentPlain .= strip_tags(str_replace("&nbsp;"," ",str_replace("</p>","\n\r",str_replace("<br />","\n\r",$content->text))));
            $contentPlain .= "\n\r\n\r";
            $i++;
        }
        
        $contentHtml .= '</body></html>';
        
        //echo $contentHtml;
            //start building mail
        $boundary = uniqid('np');
        $headers = "MIME-Version: 1.0\r\n";
        $headers .= "From: spc@itsbetter.de \r\n";
        $headers .= "To: ".$to."\r\n";
        $headers .= "Content-Type: multipart/alternative;boundary=" . $boundary . "\r\n";
        
                //here is the content body
        $message = "This is a MIME encoded message.";
        $message .= "\r\n\r\n--" . $boundary . "\r\n";
        $message .= "Content-type: text/plain;charset=utf-8\r\n\r\n";

        //Plain text body
        $message .= $contentPlain;
        $message .= "\r\n\r\n--" . $boundary . "\r\n";
        $message .= "Content-type: text/html;charset=utf-8\r\n\r\n";

        //Html body
        $message .= $contentHtml;
        $message .= "\r\n\r\n--" . $boundary . "--";
        
        $this->status = mail($to,$subject,$message,$headers);
        
        return $this->status ? "send" : "failed";
    }
    
    private function getChecklistPointContent($id){
        $dataObject = new DataObject();        
        $dbData = $this->select("SELECT `text`,`heading` FROM `checklistpoints` WHERE `checklistPointId` = ".$id)->fetch_object();
        $dataObject->produce($dbData->text,$dbData->heading);
        return $dataObject;
    }
    
    public function count() {

    }
}

class DataObject{
    public function produce($content,$heading){
        $this->text = $content;
        $this->heading = $heading;
    }
}

?>